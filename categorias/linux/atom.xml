<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: linux | Rogério Lino]]></title>
  <link href="http://rogeriolino.com/categorias/linux/atom.xml" rel="self"/>
  <link href="http://rogeriolino.com/"/>
  <updated>2014-07-21T09:44:17-03:00</updated>
  <id>http://rogeriolino.com/</id>
  <author>
    <name><![CDATA[Rogério Lino]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Ubuntu: PHP 5.4 + PHP5-FPM/FastCgi on Apache2]]></title>
    <link href="http://rogeriolino.com/2012/11/26/ubuntu-php-5-4-php5-fpmfastcgi-on-apache2/"/>
    <updated>2012-11-26T14:55:46-02:00</updated>
    <id>http://rogeriolino.com/2012/11/26/ubuntu-php-5-4-php5-fpmfastcgi-on-apache2</id>
    <content type="html"><![CDATA[<p>Os comandos abaixo que devem ser executados como <strong>root</strong>.</p>

<h3>Passo 1 &ndash; Verificando a versão do PHP no repositório</h3>

<pre><code>apt-cache show php5 | grep Version
</code></pre>

<p>Caso a versão mais nova já esteja na 5.4 ou superior, então pule para o próximo passo. Senão execute os comandos abaixo para adicionar o repositório com a versão 5.4.</p>

<pre><code>apt-get install python-software-properties
add-apt-repository ppa:ondrej/php5
apt-get update
</code></pre>

<h3>Passo 2 &ndash; Instalando os pacotes</h3>

<p>Execute o commando abaixo para instalar de uma só vez o Apache2 como Worker, o módulo FastCgi e o PHP 5.4 com PHP-FPM.</p>

<pre><code>apt-get install apache2-mpm-worker libapache2-mod-fastcgi php5-fpm php5
</code></pre>

<p>Habilitando os módulos de requeridos para o próximo passo:</p>

<pre><code>a2enmod actions fastcgi alias
</code></pre>

<h3>Passo 3 &ndash; Configurando o Apache2</h3>

<p>Editar o arquivo de configuração do módulo fastcgi</p>

<pre><code>vim /etc/apache2/mods-enabled/fastcgi.conf
</code></pre>

<p>Caso já tenha algumas entradas, comente (adicionando # no início da linha ou simplesmente remova) e adicione as seguintes linhas:</p>

<pre><code>AddHandler php5-fcgi .php
Action php5-fcgi /php5-fcgi
Alias /php5-fcgi /usr/lib/cgi-bin/php5-fcgi
FastCgiExternalServer /usr/lib/cgi-bin/php5-fcgi -socket /var/run/php5-fpm.sock -pass-header Authorization
</code></pre>

<p>obs: O arquivo /usr/lib/cgi-bin/php5-fcgi realmente não existe, será apenas uma ponte para o PHP-FPM</p>

<h3>Passo 4 &ndash; Configurando o PHP-FPM</h3>

<p>Abra o arquivo de configuração do PHP-FPM</p>

<pre><code>vim /etc/php5/fpm/pool.d/www.conf
</code></pre>

<p>E procure pela opção listen. Se não estiver como socket, altere conforme abaixo:</p>

<pre><code>listen = /var/run/php5-fpm.sock
</code></pre>

<p>Essa opção serve para evitar overhead no TCP (caso o socket não esteja configurado)</p>

<p>obs: Repare que tem que ser o mesmo caminho especificado no fastcgi.conf</p>

<h3>Passo 5 &ndash; Reiniciando e testando</h3>

<p>Reiniciando os serviços:</p>

<pre><code>/etc/init.d/apache2 restart
/etc/init.d/php5-fpm restart
</code></pre>

<p>Criando arquivo de teste:</p>

<pre><code>cd /var/www
echo '&lt;?php phpinfo();' | tee info.php
</code></pre>

<p>Depois acesse o arquivo criado via browser: <a href="http://nome_servidor/info.php">http://nome_servidor/info.php</a></p>

<p>Confira a <strong>versão do PHP descrita no cabeçalho</strong> e se o valor do <strong>Server API</strong> está como <strong>FPM/FastCGI</strong>.</p>

<p><img src="http://rogeriolino.com/wp-content/uploads/2012/11/phpinfo.png" alt="" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[SGA Livre]]></title>
    <link href="http://rogeriolino.com/2010/03/18/sga-livre/"/>
    <updated>2010-03-18T09:51:13-03:00</updated>
    <id>http://rogeriolino.com/2010/03/18/sga-livre</id>
    <content type="html"><![CDATA[<p><em><strong>ATENÇÃO:</strong> Se você está pensando em utilizar um sistema para gerenciar a fila de atendimento da sua organização, conheça o <a href="http://www.novosga.org">Novo SGA</a>.</em></p>

<hr />

<p><img src="http://rogeriolino.com/wp-content/uploads/2010/03/sga_logo.jpg" alt="" /></p>

<blockquote>**SGA LIVRE** significa Sistema de Gerenciamento do Atendimento, versão Livre. É desenvolvido pela DATAPREV, totalmente baseado em tecnologias de software livre e de código aberto.

Através do SGA é possível gerenciar filas e fluxo de atendimento em quaisquer tipos de empresas ou organizações que prestam serviço de atendimento presencial à pessoas.

O SGA oferece o controle de filas de atendimento através de emissão de senhas e chamada das mesmas através de painéis. As filas de atendimento podem conter um único serviço ou um grupo de serviços. Os painéis podem chamar um, vários ou todos os serviços. Uma unidade de atendimento pode ter vários painéis.

O SGA é mais do que um sistema de controle de filas. Ao gerenciar o fluxo de atendimento, o sistema apresenta uma série de recursos que auxiliam na gerência e administração das unidades de atendimento.

Fornece uma diversidade de informações gerenciais preciosas, através de relatórios, estatísticas e gráficos avançados sobre atendimentos de uma unidade, de um grupo de unidades ou de todas elas. É possível obter estatísticas e tempos médios de atendimento por atendente, por período e por unidade, entre outras. Pode-se obter dados detalhados ou agregados.

As informações gerenciais fornecidas pelo SGA possibilitam aos gestores planejar, acompanhar, monitorar, otimizar e agilizar o atendimento aos clientes.

fonte: [http://www.softwarepublico.gov.br/ver-comunidade?community_id=15719494](http://www.softwarepublico.gov.br/ver-comunidade?community_id=15719494)</blockquote>


<p>Não é novidade o lançamento da versão livre do SGA, porém é com muito orgulho que hoje vejo este software ganhando força no cenário nacional, e também por ter participado do seu desenvolvimento. O software foi desenvolvido em <a href="http://php.net">PHP</a> fornecendo uma camada para abstração do <a href="http://en.wikipedia.org/wiki/Relational_database_management_system">RDMS</a>, utilizando como interface de acesso o <a href="http://php.net/manual/en/book.pdo.php">PDO</a> (suporte padrão ao <a href="http://www.postgresql.org">PostgreSQL</a>). Tal contribuição foi desde definir a estrutura do sistema, passando por diagramação, HTML, CSS, até a programação PHP e Javascript.</p>

<p>[caption id=&ldquo;attachment_238&rdquo; align=&ldquo;aligncenter&rdquo; width=&ldquo;294&rdquo; caption=&ldquo;Tela de instalação do SGA&rdquo;]<a href="http://rogeriolino.com/wp-content/uploads/2010/03/sga_instalacao.jpg"><img src="http://rogeriolino.com/wp-content/uploads/2010/03/sga_instalacao-294x300.jpg" alt="" /></a>[/caption]</p>

<p>Dividido em módulos é fácil customizar a ferramenta para atender as  necessidades específicas de qualquer centro de atendimento. Para facilitar o uso de requisições assíncronas no sistema foi  utilizada o código <a href="http://pt.wikipedia.org/wiki/AJAX_(programa%C3%A7%C3%A3o">Ajax</a>) da lib escrita por mim e já comentada nesse blog (<a href="http://rogeriolino.com/2009/03/11/javascript-libjsx/">libjsx</a>, <a href="http://code.google.com/p/libjsx/source/browse/trunk/org/libjsx/ajax/Ajax.js">Ajax.js</a>).</p>

<p><a href="http://rogeriolino.com/wp-content/uploads/2010/03/sga_atendimento.jpg"></a></p>

<p>[caption id=&ldquo;attachment_237&rdquo; align=&ldquo;aligncenter&rdquo; width=&ldquo;300&rdquo; caption=&ldquo;Tela de atendimento do SGA&rdquo;]<a href="http://rogeriolino.com/wp-content/uploads/2010/03/sga_atendimento.jpg"><img src="http://rogeriolino.com/wp-content/uploads/2010/03/sga_atendimento-300x239.jpg" alt="" /></a>[/caption]</p>

<p>Quem quiser utilizar ou contribuir com o projeto basta se cadastrar no site <a href="http://www.softwarepublico.gov.br/">http://www.softwarepublico.gov.br/</a> e acessar a página da <a href="http://www.softwarepublico.gov.br/ver-comunidade?community_id=15719494">comunidade</a>.</p>
]]></content>
  </entry>
  
</feed>
