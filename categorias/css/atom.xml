<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: css | Rogério Lino]]></title>
  <link href="http://rogeriolino.com/categorias/css/atom.xml" rel="self"/>
  <link href="http://rogeriolino.com/"/>
  <updated>2014-07-21T09:44:17-03:00</updated>
  <id>http://rogeriolino.com/</id>
  <author>
    <name><![CDATA[Rogério Lino]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Simple javascript support detection]]></title>
    <link href="http://rogeriolino.com/2014/01/10/simple-javascript-support-detection/"/>
    <updated>2014-01-10T21:57:26-02:00</updated>
    <id>http://rogeriolino.com/2014/01/10/simple-javascript-support-detection</id>
    <content type="html"><![CDATA[<p>Partindo do princípio que o seu navegador não suporta javascript e depois contrariando via o próprio javascript, é possível fazer uma simples verificação se o navegador do usuário está com javascript habilitado ou não.</p>

<pre><code>&lt;!DOCTYPE html&gt; 
&lt;html class="no-js" lang="pt-BR"&gt;
&lt;head&gt;
    &lt;title&gt;JS detection&lt;/title&gt;
    &lt;script&gt;document.documentElement.className = document.documentElement.className.replace("no-js","js");&lt;/script&gt;

    &lt;style&gt;
        .js .alert-danger { display: none; }
        .no-js .alert-success { display: none; }
    &lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;

    &lt;div class="alert alert-danger"&gt;O seu navegador não possui suporte à &lt;b&gt;Javascript&lt;/b&gt;&lt;/div&gt;

    &lt;div class="alert alert-success"&gt;O suporte à &lt;b&gt;Javascript&lt;/b&gt; está ativado&lt;/div&gt;

&lt;/body&gt;
&lt;/html&gt;
</code></pre>

<p>Visualizar <a href="http://dev.rogeriolino.com/exemplos/javascript/js-detection/">demo online</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[UTF-8 Icons]]></title>
    <link href="http://rogeriolino.com/2013/05/06/utf-8-icons/"/>
    <updated>2013-05-06T11:55:09-03:00</updated>
    <id>http://rogeriolino.com/2013/05/06/utf-8-icons</id>
    <content type="html"><![CDATA[<p>Com a adoção dos navegadores mais modernos, muitos projetos estão adotando os ícones UTF-8 em botões. Assim diminui a dependência de imagens tornando o carregamento mais rápido. Exemplo: <a href="http://dev.rogeriolino.com/exemplos/css/utf8_icons/index.html">http://dev.rogeriolino.com/exemplos/css/utf8_icons/index.html</a></p>

<h2>Prós</h2>

<ul>
<li><p>Não há necessidade de imagens como dependência;</p></li>
<li><p>Pode usar a cor que desejar;</p></li>
<li><p>São escaláveis, muito fáceis de alterar o tamanho;</p></li>
<li><p>Pode usar transformações CSS (transparência, sombra, rotação, etc);</p></li>
<li><p>Reuso de ícones através de seletores CSS;</p></li>
</ul>


<h2>Contras</h2>

<ul>
<li><p>Os ícones das fonts padrões não são tão legais;</p></li>
<li><p>Embora não haja dependência de imagem, pode ter de font (web font);</p></li>
<li><p>Dependendo da font escolhida, um iconset pode ser mais leve;</p></li>
</ul>


<h2>Veja mais sobre ícones UTF-8</h2>

<ul>
<li><p><a href="http://www.utf8icons.com/">http://www.utf8icons.com/</a></p></li>
<li><p><a href="http://weloveiconfonts.com/">http://weloveiconfonts.com/</a></p></li>
<li><p><a href="http://fortawesome.github.io/Font-Awesome/">http://fortawesome.github.io/Font-Awesome/</a></p></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Novo SGA]]></title>
    <link href="http://rogeriolino.com/2013/02/05/novo-sga/"/>
    <updated>2013-02-05T09:33:57-02:00</updated>
    <id>http://rogeriolino.com/2013/02/05/novo-sga</id>
    <content type="html"><![CDATA[<p><a href="http://novosga.org"><img src="http://rogeriolino.com/wp-content/uploads/2013/02/novosga.png" alt="novosga" /></a></p>

<blockquote>SGA é o acrônimo de Sistema de Gerenciamento de Atendimento, sistema desenvolvido pela Dataprev e liberado como código aberto através da versão SGA Livre.

Devido ao desenvolvimento do SGA Livre estar estagnado na mesma versão desde 2009, unindo a burocracia dos responsáveis pela comunidade no [Portal do Software Público](http://softwarepublico.gov.br/) surgiu a necessidade de criar uma nova versão para esse sistema que já roda em diversas localidades do Brasil.

A parte web foi totalmente reformulada, deixando mais leve e intuitiva, com uma interface amigável e instalação super fácil. Já no painel foi feitas melhorias para funcionar em monitores widescreen. Outras melhorias e funcionalidades estão previstas e irão ser aplicadas durante o desenvolvimento do projeto.</blockquote>


<p>Visite o <a href="http://novosga.org">site do projeto</a> e confira a <a href="http://novosga.org/demo">versão demo</a> disponível online.</p>

<p>Gostou e quer contribuir com o desenvolvimento? Acesse o <a href="http://github.com/rogeriolino/novosga">projeto no GitHub</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[CSS3: Selection background color]]></title>
    <link href="http://rogeriolino.com/2013/01/02/css3-selection-background-color/"/>
    <updated>2013-01-02T10:08:47-02:00</updated>
    <id>http://rogeriolino.com/2013/01/02/css3-selection-background-color</id>
    <content type="html"><![CDATA[<p>Com o seletor <strong>selection</strong> podemos definir a cor do texto e de fundo do texto quando o selecionamos.</p>

<blockquote>
The ::-moz-selection (::selection) pseudo-element applies to the portion of a document that has been highlighted (e.g. selected with the mouse) by the user.

Gecko/Firefox supports ::-moz-selection, use also ::selection other browsers. The following properties apply to ::-moz-selection:  color, background and background-color (background-image is ignored).

[http://dochub.io/#css/selection](http://dochub.io/#css/selection)
</blockquote>


<p><strong>CSS</strong></p>

<pre><code>p::selection  { color: #000; }
p::-moz-selection { color: #000; }

p.yellow::selection  { background: yellow; }
p.yellow::-moz-selection { background: yellow; }

p.green::selection { background: #58FF4B; }
p.green::-moz-selection { background: #58FF4B; }

p.pink::selection { background: #E2189C; }
p.pink::-moz-selection { background: #E2189C; }
</code></pre>

<p><strong>HTML</strong></p>

<pre><code>&lt;p class="yellow"&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit...&lt;/p&gt;

&lt;p class="green"&gt;Aliquam erat volutpat. Donec in elit at magna venenatis venenatis...&lt;/p&gt;

&lt;p class="pink"&gt;Donec interdum placerat urna at aliquet...&lt;/p&gt;
</code></pre>

<p><strong>Exemplo</strong>
<a href="http://dev.rogeriolino.com/exemplos/css/selection/index.html">http://dev.rogeriolino.com/exemplos/css/selection/index.html</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[jQuery + Modernizr: AccessKey detection]]></title>
    <link href="http://rogeriolino.com/2012/12/13/jquery-modernizr-accesskey-detection/"/>
    <updated>2012-12-13T14:13:36-02:00</updated>
    <id>http://rogeriolino.com/2012/12/13/jquery-modernizr-accesskey-detection</id>
    <content type="html"><![CDATA[<p>O código abaixo permite exibir no title e na frente das tags que possuem o atributo <a href="http://www.w3schools.com/tags/att_global_accesskey.asp">accesskey</a> o seu atalho.</p>

<p>Com o uso do CSS é adicionado ao <a href="http://www.w3schools.com/cssref/sel_after.asp">final do conteúdo da tag</a> o seu atalho. E via Javascript esse atalho também é adicionado ao title.</p>

<p>Como esses atalhos variam de acordo com o Browser e o Sistema Operacional, fiz uso do Modernizr + Detectizr para adicionar no body a classes informando o ambiente.</p>

<p><strong>Dependências</strong></p>

<pre><code>&lt;script src="http://cdnjs.cloudflare.com/ajax/libs/jquery/1.8.3/jquery.min.js"&gt;&lt;/script&gt;
&lt;script src="http://cdnjs.cloudflare.com/ajax/libs/modernizr/2.6.2/modernizr.min.js"&gt;&lt;/script&gt;
&lt;script src="https://raw.github.com/barisaydinoglu/Detectizr/master/detectizr.min.js"&gt;&lt;/script&gt;
</code></pre>

<p><strong>CSS</strong></p>

<pre><code>*[accesskey]:after {
    margin-left: 0.3em;
    color: #ccc;
    content: "[Alt + " attr(accesskey) "]";
}

body.firefox *[accesskey]:after { content: "[Alt + Shift + " attr(accesskey) "]"; }
body.firefox.mac *[accesskey]:after { content: "[Ctrl + Opt + " attr(accesskey) "]";  }
body.safari.mac *[accesskey]:after { content: "[Ctrl + " attr(accesskey) "]";  }
</code></pre>

<p><strong>Javascript</strong></p>

<pre><code>/**
 * Add browser and OS name to body class, and append the shortcut to element title
 * @author rogeriolino
 */
(function($) {
    $(document).ready(function() {
        Modernizr.Detectizr.detect({detectScreen:false});
        var body = $('body')
        body.addClass(Modernizr.Detectizr.device.browser + ' ' + Modernizr.Detectizr.device.os);
        $('*[accesskey]').each(function(i, e) {
            var elem = $(e);
            prefix = 'Alt';
            if (body.hasClass('firefox')) {
                if (body.hasClass('mac')) {
                    prefix = 'Ctrl + Opt';
                } else {
                    prefix = 'Alt + Shift';
                }
            } else if (body.hasClass('safari mac')) {
                prefix = 'Ctrl';
            }
            elem.prop('title', elem.prop('title') + ' [' + prefix + ' + ' + elem.attr('accesskey') + ']');
        });
    });
})($);
</code></pre>

<p><strong>Demo</strong></p>

<p><a href="http://jsfiddle.net/qmB3R/">Clique aqui para visualizar o exemplo no jsFiddle.net</a></p>
]]></content>
  </entry>
  
</feed>
