<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Actionscript | My Octopress Blog]]></title>
  <link href="http://rogeriolino.github.io/blog/categories/actionscript/atom.xml" rel="self"/>
  <link href="http://rogeriolino.github.io/"/>
  <updated>2014-07-14T12:08:49-03:00</updated>
  <id>http://rogeriolino.github.io/</id>
  <author>
    <name><![CDATA[Your Name]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Flash: SWFAddress + ReWrite = SEO]]></title>
    <link href="http://rogeriolino.github.io/blog/2010/04/01/flash-swfaddress-rewrite-seo/"/>
    <updated>2010-04-01T11:44:53-03:00</updated>
    <id>http://rogeriolino.github.io/blog/2010/04/01/flash-swfaddress-rewrite-seo</id>
    <content type="html"><![CDATA[<p><a href="http://www.asual.com/swfaddress"><img src="http://rogeriolino.com/wp-content/uploads/2010/03/asual-swfaddress.jpg" alt="" /></a></p>

<blockquote>[SWFAddress](http://www.asual.com/swfaddress) é uma pequena mas poderosa biblioteca que provê [deep linking](http://en.wikipedia.org/wiki/Deep_linking) para Flash e Ajax. É uma ferramenta de desenvolvimento, permitindo a criação de URLs unicas e virtuais que podem apontar para uma seção do site ou aplicação. SWFAddress habilita algumas de importantes capacidades que faltam hoje em dia nas tecnologias [RIA](http://pt.wikipedia.org/wiki/RIA), incluindo:

> 
> 
    
>   * Adicionar ao Favoritos de um navegador ou site social
> 
    
>   * Enviar links via email ou mensageiros instantâneos
> 
    
>   * Procurar por um conteúdo específico através dos sites de buscas
> 
    
>   * Utilizar o histórico do navegador e o botão de recarregar
> 

</blockquote>


<p>O <a href="http://www.adobe.com/br/products/flash/">Flash</a> está para o <a href="http://en.wikipedia.org/wiki/Search_engine_optimization">SEO</a> assim como o <a href="http://cinemaeafins.com/files/2008/11/batmancoringa.jpg">Coringa está para o Batman</a>. Mas nem tudo está perdido quando se trata de otimizar a indexação do site em SWF nos mecanismos de busca. Com SWFAddress você pode interagir com a página via javascript alterando a URL e o próprio conteúdo do filme, possibilidade do o uso dos botões voltar e avançar do browser, adicionar ao Favoritos e alterar a animação do seu filme de acordo com a URL que está sendo requisitada.</p>

<p>Caso sua página seja acessada através da URL **<a href="http://siteemflash.com/#contato**,">http://siteemflash.com/#contato**,</a> você poderá pular na timeline indo direto para o frame do contato. Para evitar o reload da página toda interação é feita através de âncoras html (#). E as alterações da URL utilizando âncoras são desprezadas pelos buscadores, uma vez que a âncora só serve para movimentar o foco na mesma página, logo o seu conteúdo permanece inalterado.</p>

<p>É aí que entra o <a href="http://httpd.apache.org/docs/1.3/mod/mod_rewrite.html">módulo ReWrite do Apache</a>, com o mod_rewrite podemos escrever condições para tratar as requisições, redirecionando-as ou não. Então voltando ao exemplo anterior, teríamos uma condição que quando for requisitada a página **<a href="http://siteemflash.com/contato**">http://siteemflash.com/contato**</a> (ou qualquer outra URL) redireciona para a página inicial (index) adicionando a âncora para contato (#contato) e imprime na página o conteúdo referente à mesma. Esse conteúdo impresso não será visível, apenas para indexação. O <a href="http://pt.wikipedia.org/wiki/Sitemap">sitemap</a> ou a estrutura básica do site, também deve estar contido no bloco de código html invisível, juntamente com todas outras informações relevantes.</p>

<p>Resumindo, você acaba tendo um trabalho dobrado ao desenvolver o site, mas evita transtornos de indexação. É muito útil para quem não abre mão do site feito com o uso da ferramenta da Adobe.</p>

<p>No próprio site da Asual tem um <a href="http://www.asual.com/swfaddress/samples/seo/">exemplo de uso do SWFAddress para SEO</a> (o exemplo pode ser baixado pelo site). Abaixo segue alguns sites que fizeram uso da biblioteca, no qual o primeiro eu participei do desenvolvimento:</p>

<ul>
<li><p><a href="http://www.oticasparis.com.br/">Óticas Paris</a></p></li>
<li><p><a href="http://www.salinas-rio.com.br/inverno2010/">Salinas Rio -inverno2010</a></p></li>
<li><p><a href="http://www.umbro.com/">Umbro</a></p></li>
<li><p><a href="http://www.mis-architecture.co.uk/">Mis Architecture</a></p></li>
<li><p><a href="http://www.kraftfoods.com/foodandfamily">Kraftfoods &ndash; Food and Family</a></p></li>
<li><p><a href="http://www.bartleboglehegarty.com/">BBH</a></p></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Flash: Game Tutorials]]></title>
    <link href="http://rogeriolino.github.io/blog/2007/08/23/flash-game-tutorials/"/>
    <updated>2007-08-23T18:04:38-03:00</updated>
    <id>http://rogeriolino.github.io/blog/2007/08/23/flash-game-tutorials</id>
    <content type="html"><![CDATA[<p>Uma coisa que facina a mim e acredito que a muitos outros usuários do Flash é a posibilidade de desenvolver jogos bastante interativos com uma certa facilidade.</p>

<p>Então como conhecimento em excesso nunca  é o bastante, segue alguns links de Tutoriais sobre criação de jogos (variados) em Flash, e links de experimentos interessantes.</p>

<p>OutsideOfSociety (Tutoriais &ndash; Exemplos)
<a href="http://oos.moxiecode.com/">http://oos.moxiecode.com/</a></p>

<p>Tonypa (Tutoral &ndash; Tile Based Games)
<a href="http://www.tonypa.pri.ee/tbw/start.html">http://www.tonypa.pri.ee/tbw/start.html</a></p>

<p>Strille (Tutoriais)
<a href="http://www.strille.net/tutorials/part1_scrolling.php">http://www.strille.net/tutorials/part1_scrolling.php</a></p>

<p>Andre Michelle (Exemplos)
<a href="http://lab.andre-michelle.com/">http://lab.andre-michelle.com/</a></p>

<p>GotoAndPlay (Tutoriais)
<a href="http://www.gotoandplay.it/">http://www.gotoandplay.it/</a></p>

<p>GotoAndPlay (Tutorial &ndash; Zelda-like Game)
<a href="http://www.gotoandplay.it/_articles/2003/10/zelda.php">http://www.gotoandplay.it/_articles/2003/10/zelda.php</a></p>

<p>Tutorialized (Tutoriais)
<a href="http://www.tutorialized.com/tutorials/Flash/Games/1">http://www.tutorialized.com/tutorials/Flash/Games/1</a></p>

<p>MXStudio (Tutorial Megaman &ndash; Parte 1 e 2)
<a href="http://www.mxstudio.com.br/views.tutorial.php?act=view&amp;cid=3&amp;aid=1128">http://www.mxstudio.com.br/views.tutorial.php?act=view&amp;cid=3&amp;aid=1128</a>
<a href="http://www.mxstudio.com.br/views.tutorial.php?act=view&amp;cid=3&amp;aid=1132">http://www.mxstudio.com.br/views.tutorial.php?act=view&amp;cid=3&amp;aid=1132</a></p>

<p>GameSheep (Tutorial &ndash; Flash Racing Game)
<a href="http://www.gamesheep.com/free/flash-tutorials/1-flash-racing-game-1/flash-tutorial-1-1.php">http://www.gamesheep.com/free/flash-tutorials/1-flash-racing-game-1/flash-tutorial-1-1.php</a></p>

<p>Emanuele Feronato (Tutorial)
<a href="http://www.emanueleferonato.com/2006/10/29/flash-game-creation-tutorial-part-1/">http://www.emanueleferonato.com/2006/10/29/flash-game-creation-tutorial-part-1/</a></p>

<p><a href="http://www.emanueleferonato.com/2006/10/29/flash-game-creation-tutorial-part-1/"></a>Actionscript.org (Tutorial &ndash; Building Games in Flash)
<a href="http://www.actionscript.org/resources/articles/52/1/Building-games-in-flash/Page1.html">http://www.actionscript.org/resources/articles/52/1/Building-games-in-flash/Page1.html</a></p>

<p>Flash Dreamer (Tutorial &ndash; Into to OOP Game Design)
<a href="http://www.freshvision.com.au/blog/index.php/2007/03/27/tutorial-intro-to-oop-game-design/">http://www.freshvision.com.au/blog/index.php/2007/03/27/tutorial-intro-to-oop-game-design/</a></p>

<p>Flashkit (Tutorial &ndash; Scoreboard)
<a href="http://www.flashkit.com/tutorials/Games/How_to_c-Nick_Kuh-771/index.php">http://www.flashkit.com/tutorials/Games/How_to_c-Nick_Kuh-771/index.php</a></p>

<p><a href="http://www.flashkit.com/tutorials/Games/How_to_c-Nick_Kuh-771/index.php"></a>FlashPerfection (Tutorial &ndash; Pong)
<a href="http://www.flashperfection.com/tutorials/How-to-Make-the-Game-of-Pong-65527.html">http://www.flashperfection.com/tutorials/How-to-Make-the-Game-of-Pong-65527.html</a></p>

<p>Matheus Prestes (Tutorial &ndash; Tiles Map &ndash;  português)
<a href="http://www.freewebs.com/matheusprestes/MapTiles/html/TilesMap.html">http://www.freewebs.com/matheusprestes/MapTiles/html/TilesMap.html </a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Wiki FlashMasters]]></title>
    <link href="http://rogeriolino.github.io/blog/2007/04/09/wiki-flashmasters/"/>
    <updated>2007-04-09T14:43:36-03:00</updated>
    <id>http://rogeriolino.github.io/blog/2007/04/09/wiki-flashmasters</id>
    <content type="html"><![CDATA[<p>Já tem algum tempo que está no ar a <a href="http://wiki.flashmasters.net/">Wikipedia FlashMasters</a> mas estava esperando juntar mais um pouco de conteúdo antes de divulgá-la aqui.</p>

<p>Lá você poderá tirar sua dúvida sobre algum comando ActionScript por exemplo, ou até mesmo deixar sua contribuíção. Assim como eu em <a href="http://wiki.flashmasters.net/index.php?title=Operadores">Operadores</a>, que também postei <a href="http://rogeriolino.com/2007/03/24/actionscript-operadores/">aqui no blog</a>.</p>

<p>A intenção por trás da criação do Wiki está em ter o Help (ou um) do Flash traduzido para o português. Como o <a href="http://livedocs.adobe.com/flash/8/">LiveDocs</a> da Adobe.</p>

<p>Tirando muitas dúvida dos usuários Flash do Brasil. Que sempre reclamam de ter pouco conteúdo a respeito escrito em nosso idioma.</p>

<p>Sem esquecer também do <a href="www.flashmasters.net/forum">Forum</a>, bem rico em conteúdo. E contanto com os melhores Flash Users do Brasil para sanar sua(s) dúvida(s).</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ActionScript: Operadores]]></title>
    <link href="http://rogeriolino.github.io/blog/2007/03/24/actionscript-operadores/"/>
    <updated>2007-03-24T18:40:27-03:00</updated>
    <id>http://rogeriolino.github.io/blog/2007/03/24/actionscript-operadores</id>
    <content type="html"><![CDATA[<p>Operadores são caracteres que servem para especificar como combinar, comparar ou modificar os valores de um expressão.
<strong>Operadores Mais Utilizados:</strong></p>

<p><strong>+</strong> (adição)</p>

<p>Adiciona um número, variável numérica, à expressão ou concatena (une) Strings.
<strong>Ex.:</strong></p>

<pre><code>var n:Number = A + 10;
var s:String = "Foo" + "bar";
</code></pre>

<p><strong>+=</strong> (atribuição)</p>

<p>Atribui à expressão1 o valor da expressão1 mais o valor da expressão2.
<strong>Ex.:</strong></p>

<pre><code>var s:String = "Foo";
s += " bar";
trace(s) // "Foo bar"

var n:Number = 10;
n += 2; 
trace(n) // 12
</code></pre>

<p><strong>[]</strong> (acesso à array)</p>

<p>Inicialize uma nova array (vetor ou matriz) com os elementos especificados, ou acessa os elementos através de um índice (inteiro).
<strong>Ex.:</strong></p>

<pre><code>// inicializando um vetor com 3 posições
var frutas:Array = ["banana", "manga", "uva"];

// minhaFruta irá receber "manga"
var minhaFruta:String = frutas[1];

// alterou o valor da posição 0 do vetor de "banana" para "abacaxi"
frutas[0] = "abacaxi";

// inicializando uma matriz 3 por 3
var matriz:Array = [
    [1, 2, 3], 
    [4, 5, 6], 
    [7, 8, 9]
]; 

// n recebe o valor da posição 2,2 da matriz, n = 5
var n:Number = matriz[2, 2]; 
</code></pre>

<p><strong>=</strong> (atribui/recebe)</p>

<p>Atribui o valor da expressão2 (direita) à expressão1 (esquerda).
<strong>Ex.:</strong></p>

<pre><code>var str:String = "Foobar";
var n:Number = 15;
</code></pre>

<p><strong>&mdash;</strong> (decremento)</p>

<p>Decrementa em 1 a variável. Caso venha antes da expressão (esquerda) terá maior relevância, a variável será decrementada primeiro, caso venha depois da expressão (direita) só será feita depois.
<strong>Ex.:</strong></p>

<pre><code>var n1:Number = 10;
trace(--n1); // 9

var n2:Number = 10;
trace(n2--); // 10
</code></pre>

<p><strong>/</strong> (divisão)</p>

<p>Divide a expressão1 pela expressão2.
<strong>Ex.:</strong></p>

<pre><code>var a:Number = 12;
var b:Number = 3;
trace(a / b); // saída: 4
</code></pre>

<p><strong>==</strong> (igualdade)</p>

<p>Testa a igualdade de duas expressões.
<strong>Ex.:</strong></p>

<pre><code>var a:Number = 5;
var b:Number = 10;
var c:Number = 5;

trace(a == b); // false
trace(a == c); // true
</code></pre>

<p><strong>></strong> (maior que)</p>

<p>Compara duas expressções e determina se a expressão1 é maior que a expressão2, se for retorna true.
<strong>Ex.:</strong></p>

<pre><code>var a:Number = 5;
var b:Number = 10;

trace(a &gt; b); // false
trace(b &gt; a); // true
</code></pre>

<p><strong>>=</strong> (maior ou igual que)</p>

<p>Compara duas expressões e determina se a expressão1 é maior ou igual que a expressão2, se for retorna true.
<strong>Ex.:</strong></p>

<pre><code>var a:Number = 5;
var b:Number = 5;
var c:Number = 7;

trace(a &gt;= b); // true
trace(c &gt;= b); // true
</code></pre>

<p><strong>++</strong> (incremento)</p>

<p>Incrementa em 1 a variável. Caso venha antes da expressão (esquerda) terá maior relevância, a variável será incrementada primeiro, caso venha depois da expressão (direita) só será feita depois.</p>

<p><strong>Ex.:</strong></p>

<pre><code>var n1:Number = 10;
trace(++n1); // 11

var n2:Number = 10;
trace(n2++); // 10
</code></pre>

<p><strong>!=</strong> (desigualdade/diferente)</p>

<p>Testa a desigualdade de duas expressões.
<strong>Ex.:</strong></p>

<pre><code>var a:Number = 5;
var b:Number = 10;
var c:Number = 5;

trace(a != b); // true
trace(a != c); // false
</code></pre>

<p><strong>&lt;</strong> (menor que)</p>

<p>Compara duas expressções e determina se a expressão1 é menor que a expressão2, se for retorna true.
<strong>Ex.:</strong></p>

<pre><code>var a:Number = 5;
var b:Number = 10;

trace(a &lt; b); // true
trace(b &lt; a); // false
</code></pre>

<p><strong>&lt;=</strong> (menor igual que)</p>

<p>Compara duas expressões e determina se a expressão1 é menor ou igual que a expressão2, se for retorna true.
<strong>Ex.:</strong></p>

<pre><code>var a:Number = 5;
var b:Number = 5;
var c:Number = 7;

trace(a &lt;= b); // true
trace(b &lt;= c); // true
</code></pre>

<p><strong>&amp;&amp;</strong> (E lógico)</p>

<p>Executa uma operação booleana nos valores de ambas expressões.
<strong>Ex.:</strong></p>

<pre><code>var n:Number = 50;
if ((n &gt; 10) &amp;&amp; (n &lt; 80)) {
    trace("n está entre 10 e 80");
}
</code></pre>

<p><strong>!</strong> (NÃO lógico)</p>

<p>Inverte o valor booleano da variável ou expressão (negação).
<strong>Ex.:</strong></p>

<pre><code>var b:Boolean = false;
if (!b) {
    trace("Condição passada como true");
}
</code></pre>

<p><strong>||</strong> (OU lógico)</p>

<p>Executa uma operação booleana nos valores de ambas expressões.
<strong>Ex.:</strong></p>

<pre><code>var n:Number = 100;
if ((n &lt; 10) &amp;&amp; (n &gt; 80)) {
    trace("n é menor que 10 ou maior que 80");
}
</code></pre>

<p><strong>%</strong> (módulo/mod)</p>

<p>Calcula o resto da divisão entre a expressão1 pela expressão2.
<strong>Ex.:</strong></p>

<pre><code>var a:Number = 10;
var b:Number = 3;

trace(a%b); // 1
</code></pre>

<p>***** (multiplicação)</p>

<p>Multiplica a expressão1 pela expressão2.
<strong>Ex.:</strong></p>

<pre><code>var a:Number = 4;
var b:Number = 3;

trace(a*b); // 12
</code></pre>

<p><strong>&ndash;</strong> (subtração)</p>

<p>Usado para subtrair ou negar, transformar em negativo, expressões.
<strong>Ex.:</strong></p>

<pre><code>var a:Number = 8;
var b:Number = 2;

trace(a-b); // 6
trace(-(a-b)); // -6
</code></pre>

<p><strong>&ndash;=</strong> (atribuição de decremento)</p>

<p>Atribui à expressão1 o valor da expressão1 menos a expressão2.
<strong>Ex.:</strong></p>

<pre><code>var a:Number = 5;
a -= 3;

trace(a); // 2
</code></pre>

<p>Para saber mais sobre operadores do Actionscript veja no próprio help do Flash, ou no <a href="http://livedocs.adobe.com/flash/8/">LiveDocs da Adobe</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Flash: Resize Proporcional]]></title>
    <link href="http://rogeriolino.github.io/blog/2007/03/06/flash-resize-proporcional/"/>
    <updated>2007-03-06T23:41:33-03:00</updated>
    <id>http://rogeriolino.github.io/blog/2007/03/06/flash-resize-proporcional</id>
    <content type="html"><![CDATA[<p>Acabei de responder no <a href="http://www.flashmasters.com.br/forum/">forum da FlashMasters</a> um tópico que se tratava sobre a seguinte dúvida:</p>

<p>O membro queria saber alguma função que redimensiona-se um determinado objeto mas mantendo a sua proporção. Por exemplo um MovieClip de tamanho 400x200 se eu aumentar a largura em 100 tenho que aumentar a altura em 50. Isso devido a razão entre os dois valores.</p>

<p>Então com um lápis na mão podemos chegar a seguinte fórmula para uma nova altura caso altere sua largura:</p>

<blockquote>
**H =  dW . H/W + H**
Aonde:
_ H: Altura_
_W: Largura_
_dX:  delta da variável "X"_
</blockquote>


<p><em>Sabendo a fórmula para uma nova altura é facil chegar na da nova largura:</em></p>

<blockquote>**W = dH . W/H + W**</blockquote>


<p>Agora então mãos a obra com as Actions:</p>

<pre><code>MovieClip.prototype.resizeW = function(w) {
    var dw = w - this._width;
    this._height += dw * (this._height / this._width);
    this._width = w;
}

MovieClip.prototype.resizeH = function(h) {
    var dh = h - this._height;
    this._width += dh * (this._width / this._height);
    this._height = h;
}
</code></pre>

<p>Para utilizar:</p>

<pre><code>// redimensionando a partir da largura
MovieClip.resizeW(novaLargura);

// redimensionando a partir da altura
MovieClip.resizeH(novaAltura);
</code></pre>

<p>Espero que seja útil.</p>
]]></content>
  </entry>
  
</feed>
